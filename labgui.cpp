// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "labgui.h"

static void cb_Go(Fl_Button*, void*) {
  double vm = voltage->value();/*@ $v_m$ is the variable that carries the value of voltage and
it should between 12 to 18.
@*/
const double rs=75;
const double vs=20;
const double r0=100;
const double k=0.5;
if(vm<12||vm>18) //std::cout <<"NG"<<std::endl;
{
fl_alert("That voltage is out of range.");
msg->show();
}
else if(vm>=12&&vm<=18)
{

double t = (rs*vm)/(k*(vs-vm))-r0/k;//t is a variable that carries the value of temperature

temperature->value(t);
};
}

Fl_Value_Input *voltage=(Fl_Value_Input *)0;

Fl_Value_Output *temperature=(Fl_Value_Output *)0;

Fl_Output *msg=(Fl_Output *)0;

Fl_Double_Window* make_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(460, 320, "Gas Temperature");
    w = o; if (w) {/* empty */}
    o->color((Fl_Color)173);
    { // calculate correct temp based on voltage
      Fl_Button* o = new Fl_Button(180, 145, 70, 20, "Go");
      o->color((Fl_Color)211);
      o->labelcolor((Fl_Color)214);
      o->callback((Fl_Callback*)cb_Go);
    } // Fl_Button* o
    { voltage = new Fl_Value_Input(100, 76, 65, 18, "Voltage");
      voltage->color((Fl_Color)133);
      voltage->labelcolor((Fl_Color)215);
    } // Fl_Value_Input* voltage
    { temperature = new Fl_Value_Output(345, 221, 70, 18, "Temperature:");
      temperature->color((Fl_Color)87);
      temperature->labelcolor((Fl_Color)212);
      temperature->textfont(6);
    } // Fl_Value_Output* temperature
    { msg = new Fl_Output(350, 41, 0, 23, "Voltage is out of range");
      msg->labelfont(3);
      msg->labelsize(24);
      msg->labelcolor((Fl_Color)81);
      msg->hide();
    } // Fl_Output* msg
    o->end();
  } // Fl_Double_Window* o
  return w;
}
